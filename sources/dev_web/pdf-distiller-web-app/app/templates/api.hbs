{{page-title "HowTo"}}
<DashBar @route="api"/>
<div class="page">
    <div class="page-content">
      <style>
        .styled {
    max-width: none;
    background-color: white;
    padding: 30px;
}
.words-wrap {
    word-wrap: break-word;
}
.w-full {
    width: 100%;
}
.text {
    --tw-text-body: #374151;
    --tw-text-bullets: #d1d5db;
    --tw-text-code: #111827;
    font-size: 1rem;
    line-height: 1.75;
}
.text {
    color: var(--tw-text-body);
    max-width: 50rem;
}

.text :where(.text>:first-child):not(:where([class~=not-text] *)) {
    margin-top: 0;
}
.text :where(p):not(:where([class~=not-text] *)) {
    margin-bottom: 1.25em;
    margin-top: 1.25em;
}
h1, h2, h3, h4, h5, h6, hr, p, pre {
    margin: 0;
}

*, :after, :before {
    border: 0 solid #d9d9e3;
    box-sizing: border-box;
}

.styled ol, .styled ul {
    display: flex;
    flex-direction: column;
    padding-left: 1rem;
}
.styled ol {
    counter-reset: item;
}
.text :where(ol):not(:where([class~=not-text] *)) {
    list-style-type: decimal;
    margin-bottom: 1.25em;
    margin-top: 1.25em;
    padding-left: 1.625em;
}
ol, ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

.styled ol li, .styled ol li>p, .styled ol ol, .styled ol ul, .styled ul li, .styled ul li>p, .styled ul ol, .styled ul ul {
    margin: 0;
}
.text :where(ol>li):not(:where([class~=not-text] *)) {
    padding-left: 0.375em;
}
.text :where(li):not(:where([class~=not-text] *)) {
    margin-bottom: 0.5em;
    margin-top: 0.5em;
}

.text :where(.text>ol>li>:last-child):not(:where([class~=not-text] *)) {
    margin-bottom: 1.25em;
}
.text :where(.text>ol>li>:first-child):not(:where([class~=not-text] *)) {
    margin-top: 1.25em;
}
.text :where(code):not(:where([class~=not-text] *)) {
    color: var(--tw-text-code);
    font-size: .875em;
    font-weight: 600;
}
code, pre {
    font-family: Söhne Mono,Monaco,Andale Mono,Ubuntu Mono,monospace!important;
    font-size: 1em;
}

.text :where(pre):not(:where([class~=not-text] *)) {
    background-color: transparent;
    border-radius: 0.375rem;
    color: currentColor;
    font-size: .875em;
    font-weight: 400;
    line-height: 1.7142857;
    margin: 0;
    overflow-x: auto;
    padding: 0;
}



.bg-black {
    --tw-bg-opacity: 1;
    background-color: rgba(0,0,0,var(--tw-bg-opacity));
}
.rounded-md {
    border-radius: 0.375rem;
}
.mb-4 {
    margin-bottom: 1rem;
}

.text-gray-200 {
    --tw-text-opacity: 1;
    color: rgba(217,217,227,var(--tw-text-opacity));
}
.text-xs {
    font-size: .75rem;
    line-height: 1rem;
}
.font-sans {
    font-family: Söhne,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif,Helvetica Neue,Arial,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;
}
.py-2 {
    padding-bottom: 0.5rem;
    padding-top: 0.5rem;
}
.px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
}
.bg-gray-800 {
    --tw-bg-opacity: 1;
    background-color: rgba(52,53,65,var(--tw-bg-opacity));
}
.rounded-t-md {
    border-top-left-radius: 0.375rem;
    border-top-right-radius: 0.375rem;
}
.justify-between {
    justify-content: space-between;
}
.items-center {
    align-items: center;
}
.flex {
    display: flex;
}
.relative {
    position: relative;
}

.p-4 {
    padding: 1rem;
}
.overflow-y-auto {
    overflow-y: auto;
}

.gap-2 {
    gap: 0.5rem;
}
.flex {
    display: flex;
}
.ml-auto {
    margin-left: auto;
}
[role=button], button {
    cursor: pointer;
}
[type=button], [type=reset], [type=submit], button {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none;
}
button, select {
    text-transform: none;
}
button, input, optgroup, select, textarea {
    color: inherit;
    font-family: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    margin: 0;
    padding: 0;
}

:not(pre)>code.hljs, :not(pre)>code[class*=language-] {
    border-radius: 0.3em;
    padding: 0.1em;
    white-space: normal;
}
code.hljs, code[class*=language-], pre[class*=language-] {
    word-wrap: normal;
    background: none;
    color: #fff;
    -webkit-hyphens: none;
    hyphens: none;
    line-height: 1.5;
    tab-size: 4;
    text-align: left;
    white-space: pre;
    word-break: normal;
    word-spacing: normal;
}
.\!whitespace-pre {
    white-space: pre!important;
}
.text :where(pre code):not(:where([class~=not-text] *)) {
    background-color: transparent;
    border-radius: 0;
    border-width: 0;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    padding: 0;
}
.text :where(code):not(:where([class~=not-text] *)) {
    color: var(--tw-text-code);
    font-size: .875em;
    font-weight: 600;
}

      </style>
<div class="styled text w-full words-wrap dark:text-invert light">
  <h1>Pdf Weaver API How-To</h1>
  <p>Our API is live at https://api.pdf-weaver.io/api. Your can get the full OpenApi specification at <a href="https://api.pdf-weaver.io/swagger/v1/swagger.json" target="_blank">https://api.pdf-weaver.io/swagger/v1/swagger.json</a> and use the interactive Swagger UI at <a href="https://api.pdf-weaver.io/swagger/index.html" target="_blank">https://api.pdf-weaver.io/swagger/index.html</a></p>
  <h2>Step 1: Obtain a token</h2><p>Before you can interact with the main Pdf Weaver API, you need to obtain an authentication token. To do this, you have two options:</p><h3>Option 1: Use the API to get the captcha challenge and solve it manually</h3><ol><li>Make a GET request to the <code>/api/captcha</code> endpoint to get the captcha challenge:</li></ol><pre><div class="bg-black rounded-md mb-4"><div class="flex items-center relative text-gray-200 bg-gray-800 px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>http</span><button class="flex ml-auto gap-2"><svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy code</button></div><div class="p-4 overflow-y-auto"><code class="!whitespace-pre hljs language-http">GET https://yitc.ddns.net:5000/api/captcha
</code></div></div></pre><ol start="2"><li><p>The API will return a base64-encoded image of the captcha challenge. Decode the base64 string to an image using an online tool like <a href="https://base64.guru/converter/decode/image" target="_new">base64.guru</a>.</p></li><li><p>Solve the captcha challenge manually and note down the solution and the captcha secret.</p></li><li><p>Call the <code>/api/token</code> endpoint with the required parameters:</p></li></ol><ul><li><code>userId</code>: Your email address, which will serve as your user ID.</li><li><code>captchaSolution</code>: The solution to the captcha challenge.</li><li><code>captchaSecret</code>: The captcha secret associated with the captcha challenge.</li></ul><pre><div class="bg-black rounded-md mb-4"><div class="flex items-center relative text-gray-200 bg-gray-800 px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>http</span><button class="flex ml-auto gap-2"><svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy code</button></div><div class="p-4 overflow-y-auto"><code class="!whitespace-pre hljs language-http">GET https://yitc.ddns.net:5000/api/token?userId=YOUR_EMAIL_ADDRESS&amp;captchaSolution=CAPTCHA_SOLUTION&amp;captchaSecret=CAPTCHA_SECRET
</code></div></div></pre><p>Upon successful authentication, the API will return a token that you will use in subsequent requests. Additionally, you will receive a confirmation email containing the token.</p>
<h3>Option 2: Use the token generation feature on the Pdf Weaver website</h3><ol><li><p>Visit the Pdf Weaver Live App at <a href="https://pdf-weaver.io/app" target="_new">https://pdf-weaver.io/app</a>.</p></li><li><p>Click "Request New Token" on the top to the right.</p></li><li><p>Enter your email address as your user ID and solve the captcha challenge provided on the page.</p></li><li><p>Click the "Generate Token" button.</p></li></ol><p>Upon successful authentication, the website will provide a token that you can use in subsequent requests with the Pdf Weaver API. You will also receive a confirmation email containing the token.</p>
<h2>Step 2: Generate a PDF</h2><p>To generate a PDF using the Pdf Weaver API, make a POST request to the <code>/api/service/order</code> endpoint with the required request body:</p><ul><li><code>xmlData</code>: The XML data for the document.</li><li><code>xslData</code>: The XSL data for the document.</li><li><code>tokenId</code>: The token obtained in step 1.</li><li><code>userId</code>: Your user ID.</li></ul><pre><div class="bg-black rounded-md mb-4"><div class="flex items-center relative text-gray-200 bg-gray-800 px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>http</span><button class="flex ml-auto gap-2"><svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy code</button></div><div class="p-4 overflow-y-auto"><code class="!whitespace-pre hljs language-http">POST https://yitc.ddns.net:5000/api/service/order
Content-Type: application/json

{
  "xmlData": "YOUR_XML_DATA",
  "xslData": "YOUR_XSL_DATA",
  "tokenId": "YOUR_TOKEN_ID",
  "userId": "YOUR_USER_ID"
}
</code></div></div></pre><p>The API will return a <code>requestId</code> that you will use in the following steps to check the status and retrieve the generated PDF.</p><h2>Step 3: Check the status of the PDF generation</h2><p>To check the status of your PDF generation request, make a GET request to the <code>/api/service/order/state</code> endpoint with the <code>requestId</code> obtained in step 2:</p><pre><div class="bg-black rounded-md mb-4"><div class="flex items-center relative text-gray-200 bg-gray-800 px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>http</span><button class="flex ml-auto gap-2"><svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy code</button></div><div class="p-4 overflow-y-auto"><code class="!whitespace-pre hljs language-http">GET https://yitc.ddns.net:5000/api/service/order/state?requestId=YOUR_REQUEST_ID
</code></div></div></pre><p>The API will return the current status of the PDF generation process. Keep polling this endpoint until the status indicates that the process is complete.</p><h2>Step 4: Retrieve the generated PDF</h2><p>Once the PDF generation process is complete, make a GET request to the <code>/api/service/order/result</code> endpoint with the <code>requestId</code> obtained in step 2:</p><pre><div class="bg-black rounded-md mb-4"><div class="flex items-center relative text-gray-200 bg-gray-800 px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>http</span><button class="flex ml-auto gap-2"><svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy code</button></div><div class="p-4 overflow-y-auto"><code class="!whitespace-pre hljs language-http">GET https://yitc.ddns.net:5000/api/service/order/result?requestId=YOUR_REQUEST_ID
</code></div></div></pre><p>The API will return the generated PDF as a binary file, which you can save and use as needed.</p><h2>Optional: Get captcha challenge (if required)</h2><p>If the API requires captcha verification, you can get the captcha challenge by making a GET request to the <code>/api/captcha</code> endpoint:</p><pre><div class="bg-black rounded-md mb-4"><div class="flex items-center relative text-gray-200 bg-gray-800 px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>http</span><button class="flex ml-auto gap-2"><svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy code</button></div><div class="p-4 overflow-y-auto"><code class="!whitespace-pre hljs language-http">GET https://yitc.ddns.net:5000/api/captcha
</code></div></div></pre><p>Solve the captcha challenge and use the solution and secret in Step 1 to obtain the token.</p><h2>Optional: Check the API health</h2><p>To check if the API is up and running, make a GET request to the <code>/api/health</code> endpoint:</p><pre><div class="bg-black rounded-md mb-4"><div class="flex items-center relative text-gray-200 bg-gray-800 px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>http</span><button class="flex ml-auto gap-2"><svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect></svg>Copy code</button></div><div class="p-4 overflow-y-auto"><code class="!whitespace-pre hljs language-http">GET https://yitc.ddns.net:5000/api/health
</code></div></div></pre><p>If the API is healthy, the endpoint will return a <code>200</code> status code.</p></div>
    </div>
</div>