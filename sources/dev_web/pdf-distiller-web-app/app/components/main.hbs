<style>
  .drop_box_input {
    visibility: hidden;
    width: 0;
  }

  .inputbox {
    width: 60%;
    flex-direction: row;
    display: flex;
    color: darkgray;
    position: relative;
  }

  .inputbox button.btn-clear-input {
    position: relative;
    right: 25px;
    background-color: #ffffff;
    box-shadow: 0px 0px 5px 5px #ffffffa0;
    border: 0;
    padding: 2px 5px;
    cursor: pointer;
    z-index: 101;
    opacity: 0;
    line-height: 1em;
    height: 1em;
    margin-top: 1em;

  }

  .inputbox button.btn-clear-input.active {
    opacity: 1;
    transition: all 0.5s ease-in-out;
  }


  input[type="text"].custom-input {
    width: 100%;
    /* border: 2px solid #aaa;*/
    border: none;
    border-radius: 10px 0px 0px 10px;
    outline: none;
    box-shadow: -6px 6px 6px 3px rgba(0, 0, 0, 0.22);
    z-index: 100;
    padding: 5px 12px;
    box-sizing: border-box;
    transition: 0.3s;
    line-height: 3em;
    height: 3em;
    transition: width 0.5s ease-in-out;
  }

  input[type="text"].custom-input::placeholder {
    color: rgb(0, 0, 0);
    opacity: 0.5;
    text-align: center;
  }

  input[type="text"].custom-input:focus::placeholder {
    color: transparent;

  }

  input[type="text"].custom-input~label {
    position: absolute;
    top: 10px;
    opacity: 1;
    z-index: 102;
    left: calc(50% - 100px);
    transition: all 0.5s ease-in-out;

  }

  input[type="text"].custom-input:focus~label,
  input[type="text"].custom-input.active~label {
    opacity: 1;
    top: -25px;
    left: 10px;
    color: #c9ffff;
    text-shadow: 1px 1px 3px black;
  }

  .inputbox button.action-btn {
    text-decoration: none;
    background-color: #f0ffff;
    opacity: 1;
    color: #000000;
    padding: 12px;
    border: none;
    outline: none;
    transition: 0.3s;
    position: relative;
    right: 19px;
    cursor: pointer;
    width: 50px;
    height: 3em;
    display: flex;
    justify-content: start;
    overflow: hidden;
    min-width: 50px;
    transition: all 0.5s ease-in-out;
    z-index: 103;
  }

  .inputbox button.action-btn span {
    opacity: 0;
    transition: all 0.3s ease-in-out;
    position: absolute;
    margin-left: 0px;
    white-space: nowrap;
    color: white;
  }

  .inputbox button.action-btn svg {
    position: absolute;
    right: 7px;
    top: 6px;
  }



  .inputbox button.action-btn.end {
    border-radius: 0px 10px 10px 0px;
    box-shadow: 6px 6px 6px 3px rgb(0 0 0 / 22%), 0 4px 4px 0 rgb(0 0 0 / 35%);
    border-left: 1px solid gray;

  }

  .inputbox button.action-btn.not-hashing:hover {

    text-decoration: none;
    background-color: rgba(77, 152, 86, 0.8);
    ;
    color: #ffffff;
    min-width: 320px;

  }

  .inputbox button.action-btn.not-hashing:hover {

    text-decoration: none;
    background-color: rgba(77, 152, 86, 0.8);
    ;
    color: #ffffff;
    min-width: 320px;

  }

  .inputbox button.action-btn.not-hashing:hover+label {
    left: 10px;
    width: calc(100% - 360px);
    overflow: hidden;
    white-space: nowrap;

  }

  .inputbox button.action-btn.not-hashing:hover+label.active {

    width: calc(100%);

  }

  .inputbox button.action-btn.not-hashing:hover span {
    opacity: 1;
    margin-left: 5px;

  }

  .inputbox button.action-btn:hover svg {

    left: auto;
  }

  .inputbox button:focus.action-btn:hover {

    text-decoration: none;
    background-color: rgba(88, 161, 78, 0.781);
    ;
    color: #a71a1ab6;
  }

  .splitter-text {
    text-align: center;
    align-items: center;
    align-self: center;
    padding: 15px;
    color: white;
  }

  .page.has-results .splitter-text {
    padding: 5px 15px;
  }

  .together {
    flex-direction: row;
    color: darkslategrey;
    font-weight: bold;
    display: flex;
    font-family: 'Quicksand';
    text-align: center;
    width: calc(60% - 10px);
    flex-wrap: nowrap;
    justify-content: space-between;
    position: relative;
    left: -8px;
  }

  .middle {
    position: relative;
    left: -8px;
    font-size: 1.3em;
    margin: 20px;
    text-shadow: 1px 1px 2px #000000a0;
  }

  .page.has-results .middle {
    margin: 5px 20px;
  }

  .together button.btn {
    width: 100%;
    border-radius: 8px;
    text-decoration: none;
    background-color: #097a9c;
    opacity: 1;
    color: #ffffff;
    padding: 10px 20px;
    border: none;
    box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.22), 0 4px 4px 0 rgba(0, 0, 0, 0.35);
    cursor: pointer;
    outline: 1px solid #0303038c;
    outline: none;
    transition: 0.3s;

  }

  .page.has-results .together button.btn {
    height: 3em;
  }

  .together button.btn:disabled {
    background-color: gray;
  }

  .together button.btn:hover {

    text-decoration: none;
    background-color: #ffffff;
    color: #000000;
    padding: 10px 20px;
    border: none;
    outline: 1px solid #099c298c;
  }

  .together button.btn:hover:disabled {
    background-color: gray;
    cursor: not-allowed;
    color: lightgray;
    outline: none;
  }

  .together .btn span {
    display: block;
    position: relative;
    font-size: 1.2em;
  }

  .together .btn span:after {
    content: "||";
    position: absolute;
    right: -10px;
    font-size: 2em;
    top: -10px;
    color: #85e3ff;
  }

  .together .btn:disabled span:after {
    color: lightgrey;
  }

  span.invalid-hex {
    position: absolute;
    opacity: 0;
    top: 45px;
    left: 10px;
    color: red;
    font-weight: bold;
    /* text-shadow: 1px 1px 5px black; */
    padding: 4px;
    border: 1px solid gray;
    border-radius: 6px;
    background-color: lightgoldenrodyellow;
    letter-spacing: 1px;
    word-spacing: 2px;
    font-size: 0.9em;
    transition: all 0.3s ease-in-out;
  }

  span.invalid-hex.active {
    opacity: 1;
  }
</style>

<DashBar @showRequestTokenModal={{this.showRequestTokenModal}}></DashBar>

<div class="is-preload page{{if this.hasResults ' has-results'}}">

 <EnterOrUploadInput 
  @isWorking={{this.isWorking}} 
  @onContentChange={{this.updateEnteredXmlContent}} 
  @onUploadedContent={{this.updateXmlFileContent}} 
  @invalidFileMessage={{this.invalidXmlFileMessage}}
  @inputContent={{this.enteredDataOrXmlFileContent}}
  @clearInput={{this.clearXmlInputContent}}>
   <:labelContent>Enter XML plaintext</:labelContent>
 </EnterOrUploadInput>
  
  <br/>
 <EnterOrUploadInput 
  @isWorking={{this.isWorking}} 
  @onContentChange={{this.updateEnteredXslContent}} 
  @onUploadedContent={{this.updateXslFileContent}} 
  @invalidFileMessage={{this.invalidXslFileMessage}}
  @inputContent={{this.enteredDataOrXslFileContent}}
  @clearInput={{this.clearXslInputContent}}>
   <:labelContent>Enter XSL plaintext</:labelContent>
 </EnterOrUploadInput>
  
    <br/>
 <EnterInput 
  @id="token"
  @isWorking={{this.isWorking}} 
  @onContentChange={{this.updateEnteredTokenContent}}  
  @invalidMessage={{this.invalidTokenMessage}}
  @inputContent={{this.enteredTokenContent}}
  @contentType = 'token'
  @clearInput={{this.clearTokenInputContent}}>
   <:labelContent>Enter Evaluation Token</:labelContent>
 </EnterInput>
    <br/>
 <EnterInput 
  @id="token"
  @isWorking={{this.isWorking}} 
  @onContentChange={{this.updateEnteredUserIdContent}}  
  @invalidMessage={{this.invalidUserIdMessage}}
  @inputContent={{this.enteredUserIdContent}}
  @contentType = 'userid'
  @clearInput={{this.clearUserIdInputContent}}>
   <:labelContent>Enter User Id (Email)</:labelContent>
 </EnterInput>
  
  <div class="middle">to</div>
  <div class="together">
    <button class="btn verify" disabled={{if this.hasValidData '' 'disabled' }} type="button" {{on 'click'
      this.executeOrderRetrieveResult}}><span>
        <Ux::InlineLoader @active={{this.isWorking}} />CREATE PDF
      </span></button>
  </div>
  
<XToggle @value={{this.isSessionSave}} @onToggle={{fn this.toggleSessionSave}} @theme='light' />
<div class="globalerror">
{{this.globalError}}
</div>
</div>
{{#if this.isShowingRequestModal}}
  <div class="requestModal" {{on "click" this.closeRequestModal}}>
    <div class="content" {{on "click" this.doNothing}}>
    Request Token
    <EnterInput 
    @id = 'email'
  @isWorking={{this.isWorking}} 
  @onContentChange={{this.updateEnteredUserIdContent}}  
  @invalidMessage={{this.invalidUserIdMessage}}
  @inputContent={{this.enteredUserIdContent}}
  @clearInput={{this.clearUserIdInputContent}}>
   <:labelContent>Enter Email to receive Token in CC</:labelContent>
 </EnterInput>
 <br/>
 <div id="captcha"></div>
 <br/>
 
        <EnterInput 
    @id = 'email'
  @isWorking={{this.isWorking}} 
  @onContentChange={{this.updateEnteredCaptchaContent}}  
  @invalidMessage={{this.invalidCaptchaMessage}}
  @inputContent={{this.enteredCaptchaContent}}
  @clearInput={{this.clearCaptchaContent}}>
   <:labelContent>Enter Captcha</:labelContent>
 </EnterInput>
 <br/>
 <button class="btn" type="button" {{on 'click'
      this.requestToken}}><span>
        <Ux::InlineLoader @active={{this.isWorking}} />Request Token
      </span></button>
    </div>
     
    
  </div>
{{/if}}
